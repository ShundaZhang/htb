'''
Now that we have all the components of the curve, we can calculate G. The problem is that we don’t know the order of the curve mod n and that we be annoying to calculate since it isn’t a prime number. However, we know its primes factors so we calculate G to each of the prime factors.

We know that the point we are given for ECRSA A is the following: A = e*G. In RSA, the powers are calculated mod phi(n) however, for elliptic curves, the equivalent would be to calculate mod Order(n). Thus we can easily inverse e mod p and q to get the value of G for these moduli.

We know gx mod p and gx mod q so we can just use the Chinese Reminder Theorem to calculate the key.
'''


# This file was *autogenerated* from the file dec.sage
from sage.all_cmdline import *   # import sage library

_sage_const_5903637122809662755515021947736995168754672287426805126843989912574589122079777575988540257962741079681243265687009173675236168275983715754009469653492135 = Integer(5903637122809662755515021947736995168754672287426805126843989912574589122079777575988540257962741079681243265687009173675236168275983715754009469653492135); _sage_const_5749847131051177758569673850930018781121249835620885862595195976699669230352665565625560358291679473334581067739487729131754729527524453233132962213708391 = Integer(5749847131051177758569673850930018781121249835620885862595195976699669230352665565625560358291679473334581067739487729131754729527524453233132962213708391); _sage_const_10289562578458710424274507194086829817050984240222547592851639332572470430240639824743454077987245642008922463955822593313437272156555953825628000442680061 = Integer(10289562578458710424274507194086829817050984240222547592851639332572470430240639824743454077987245642008922463955822593313437272156555953825628000442680061); _sage_const_101437481132265456231017587483701417322155986175910603561924998386321564339543 = Integer(101437481132265456231017587483701417322155986175910603561924998386321564339543); _sage_const_101437481132265456231017587483701417322155986175910603561924998386321564346827 = Integer(101437481132265456231017587483701417322155986175910603561924998386321564346827); _sage_const_187671739687187487459110533011668125000 = Integer(187671739687187487459110533011668125000); _sage_const_330391735621396279531716147204646987441 = Integer(330391735621396279531716147204646987441); _sage_const_298097965081551050186524405801901300093 = Integer(298097965081551050186524405801901300093); _sage_const_95715758121388386883820315126602102706969511139851324190952657339304579946918 = Integer(95715758121388386883820315126602102706969511139851324190952657339304579946918); _sage_const_6283845344904790812852269382782560704824955615547048050501063918294596098332 = Integer(6283845344904790812852269382782560704824955615547048050501063918294596098332)
x = _sage_const_5903637122809662755515021947736995168754672287426805126843989912574589122079777575988540257962741079681243265687009173675236168275983715754009469653492135 
y = _sage_const_5749847131051177758569673850930018781121249835620885862595195976699669230352665565625560358291679473334581067739487729131754729527524453233132962213708391 
n = _sage_const_10289562578458710424274507194086829817050984240222547592851639332572470430240639824743454077987245642008922463955822593313437272156555953825628000442680061 
p = _sage_const_101437481132265456231017587483701417322155986175910603561924998386321564339543 
q = _sage_const_101437481132265456231017587483701417322155986175910603561924998386321564346827 
a = _sage_const_187671739687187487459110533011668125000 
b = _sage_const_330391735621396279531716147204646987441 
e = _sage_const_298097965081551050186524405801901300093 

P = GF(p)
Q = GF(q)
#N = GF(n) #error n is not a prime number
N = Zmod(n)

ECP = EllipticCurve(P, [a,b])
ECQ = EllipticCurve(Q, [a,b])
EC = EllipticCurve(N, [a,b])

OP = ECP.order()
OQ = ECQ.order()
O = EC.order()

print(OP)
print(OQ)
print(O)

AP = ECP(x, y)
AQ = ECQ(x, y)

inv_e_p = inverse_mod(e, OP)
inv_e_q = inverse_mod(e, OQ)

GP = inv_e_p*AP
GQ = inv_e_q*AQ

print(GP)
print(GQ)

'''
sage: p = 101437481132265456231017587483701417322155986175910603561924998386321564339543
sage: q = 101437481132265456231017587483701417322155986175910603561924998386321564346827
sage: crt([95715758121388386883820315126602102706969511139851324190952657339304579946918,6283845344904790812852269382782560704824955
....: 615547048050501063918294596098332 ], [p, q])
5982300893075105285714788320867642191331423383958247274862913259667307456410716681429992603187869704081787952336751972653886731152659743384341972005634976
'''

#gx mod p == GP.x 
#gx mod q == GQ.x

#crt([GP[0], GQ[0]], [p,q])
print(crt([_sage_const_95715758121388386883820315126602102706969511139851324190952657339304579946918 , _sage_const_6283845344904790812852269382782560704824955615547048050501063918294596098332 ], [p, q]))

