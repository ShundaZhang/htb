import gmpy2

n = 0x77d1e32bfe41fb07612bcb952e8b196d9c303941dd1947d4fb5e0fb80dea75382a1c8c951ce7394408edc801d3cd9bb4c5acd6eb0f61f512aea903b3ed440ebcf3c38d8c1baf3762f2e52517dc3b6b3273e60d2530eab551d6e55dd2349d89f96282c34039f9a6f6a80fac7e144586f3c9ee0b0bbd48fe6e5b79ab07b219585e30e42fcbe59723e562fe3c2d956de2b76e6404b654a04483060f8764a9f1cf7320709e97ae831d8cf3f04c7d9ff2c3ab0932358c9ccd518c49f4943440f4ebc7

#from factordb

p = 10410080216253956216713537817182443360779235033823514652866757961082890116671874771565125457104853470727423173827404139905383330210096904014560996952285911

#print n
#print p*p*p

c = 0x13822f9028b100e2b345a1ad989d9cdedbacc3c706c9454ec7d63abb15b58bef8ba545bb0a3b883f91bf12ca12437eb42e26eff38d0bf4f31cf1ca21c080f11877a7bb5fa8ea97170c932226eab4812c821d082030100030d84ebc63fd8767cde994e0bd1a1f905c27fb0d7adb55e3a1f101d8b5b997ba6b1c09a5e1cc65a9206906ef5e01f13d7beeebdf389610fb54676f76ec0afc51a304403d44bb3c739fd8276f0895c3587a710d15e43fc67284070519e6e0810caf86b134f02ec54018

#phi = p^2*(p-1), NOT (p-1)^3 !!!
phi = p*p*(p-1)
e = 65537

d = gmpy2.invert(e,phi)
m = pow(c,d,n)

with open('aes.key','w') as f:
	f.write(hex(m)[2:].decode('hex'))

#openssl aes-128-ecb -d -in challenge/flag.txt.aes -K 7365637265746b6579961d57bec0393c
#HTB{pl4y1ng_w1th_pr1m3s_1s_fun!}
