#https://7rocky.github.io/en/ctf/htb-challenges/crypto/zombie-rolled/
'''
def sign(self, m):
	h = bytes_to_long(sha256(m.to_bytes(self.nb, "big")).digest())
	a, b = m, h
	c = randbelow(1 << self.nb)
	r = fraction_mod(self.magic((a, b, c)), self.n)
	s1 = self.decrypt(r)
	s2 = self.decrypt(c)
	return s1, s2

r = (m+h)/(h+c)+(h+c)/(c+m)+(c+m)/(m+h) = A/B mod n
A = B*r + k*n

[ r n ]   [ B ]   [ A ]
|     | x |   | = |   |
[ 1 0 ]   [ k ]   [ B ]

A/B = ((m+h)^2*(m+c) + (h+c)^2*(m+h) + (m+c)^2*(h+c)) / (h+c)*(m+c)*(m+h)

g*A = (m+h)^2*(m+c) + (h+c)^2*(m+h) + (m+c)^2*(h+c)
g*B = (h+c)*(m+c)*(m+h)


'''

r = 2505789303867391495650877088783941765569847517246577998736543750393880930446161688724506850304124472419415153079216286065597475454616383688029309279548178307481462795729357486772845009710557778505472170053355566771130198549500845626562198113015825083531777642380264374276112749325190802419587614826204457713394919847431633282319480928047208852633932208502551255504417463993724349484530685598117997913069091903996719301847639547036610719297058654332522231595517223731534044081213561370023674058152543476129974679226258232480077556191338007925518247798729910975446773448495144073608560752026992173373799453510445776852253472688058348292363651911737069070908385323681162495612647858141676171434871816969735544670984260850751568283928088343787396824549745233250265870692588775048884778960868758059290314608146034927399786920822185284927292339306888646387931721455136393269677496554184157823454108154000496005125492963561626046100

c = 15556888180982756179033399235553212578330421518523863888221037744825740999486556134112336080506708309410889726298399

n = 3505665702302118389223722821793594356063133613081835863832188879697049576280577373535249754917571184502207495836591352684341969625962435908789180197092960037009655308950160961025697107752260742646377202877791885955406249037250074801253801147878355144466864753571435020893373487508872583696885112525485733031244551629396529015916226832345275916467949144958685457682659428621715532123214356471697457759795702970475487492882952289586441682371771679260833101594720544993319991228909275827611308533125373908550544211500338692166547000887202303969349518208270011244573307591189737762775613039647577556938599405832216557057717015236851765940117312963278586370726303760291762740757882997727938753719074310234899498377766507573874631966089663701382447134144472512147632627172639330246365938900021825837205936606277680179787640493456246142654989864189122507845037297162159444748273144834420047920247730850097467969083092827677541002183

#LLL
A, B = Matrix(ZZ, [[r, n], [1, 0]]).transpose().LLL()[0]
assert r == A * pow(B, -1, n) % n

#print(A,B)

m, h = PolynomialRing(QQ, 'm, h').gens()

#Sage Solve Equations
for g in range(10):
	p1 = (m + h) ** 2 * (c + m) + (h + c) ** 2 * (m + h) + (c + m) ** 2 * (h + c) - g * A
	p2 = (m + h) * (c + m) * (h + c) - g * B
	print(Ideal([p1, p2]).variety())

print(bytes.fromhex(hex(1949989741335361589319748039104353895461329509777569313050438882238845)[2:]))
#HTB{3CC_1s_m4g1c___15nt_1t?!}
