from Crypto.Util.number import getPrime, long_to_bytes, bytes_to_long, inverse
import gmpy2

#print bytes_to_long('Lost modulus had a serious falw in it , we fixed it in this version, This should be secure')
#print int('Lost modulus had a serious falw in it , we fixed it in this version, This should be secure'.encode('hex'),16)

msg1 = 'Lost modulus had a serious falw in it , we fixed it in this version, This should be secure'
msg2 = 'If you can\'t see the modulus you cannot break the rsa , even my primes are 1024 bits , right ?'

m1 = int(msg1.encode('hex'),16)
m2 = int(msg2.encode('hex'),16)

c1 = 0x0241f53c0690e3faccc3753b6064aef27341b5bef3a10fcbb362251e1f5474a055a04e631af1bb4542351f6051438fc6dbf2011f79cbd85bc667d1097b57818d01d11aa09db0ef221ccf8d9eb16903423702b64a534d49153b49dc47fd5597a96f2a6480d296d36d08ba3438cc193bba6ee2c3ea81ab4dbb029a737c3f5597c8e4b8db8ab06605443eb35160828bc78b1d889814d8811e89efae3d741a481a7bd09483df8ee6d32b56a8d7eb20b275cf3ba5936838da2893f82cbc469f1497f785603e72df1ae1f619e08834588f2e64dd5f4cbbdbc7357dadcd89dbd9e18b0948f9b3f8f6b0df217bd7e8ae5c89a20878ffb127e3cf862baa78cc67ec1012af

c2 = 0x7499a590fcb19dd0880b77a0dd57f66f6055976100b10053adadaeec18c382c5c3d095b4edd6ee2a5dfdc5790b18ff96e54f093fa62d4b518c1bbe65ad3588a81a1723ce72798ddd06d1eca7be9332a7b754f85582c4c5800d0c778ec320fa53806d122b4f4e436ead12bdf05031d4c181416184932517da985ff503759d128761bd96009c43bf11e45ba60f495235d29a863b7a64d9752868dd9896563fe2cc91df6f092f6d4d7d600b4fbf2b52579a0f2657223a1092c067584aad9997540b25921513f96f2da0c26ffb2ee7578540efc50bc8ab0feeeb24e0e96ebc1e6310dbed880ec5d9788a86bebe72c4b5d9b5c66716e6b84021591372c823c6d78c4e

cf1 = 0x685dba88de1ecf0b4ae5bc84b7ee87f63eb37f697ca9a5ab6af9359341a2fbbf53b9502477cabb1658fdf775a34a0712b04d0fd2679b47ec088e0ab3c0a9a866198077a496bb1de138cd165ca28722dee7c4cc81ac0a3a179095f11981e9c7bcd590576169ed877b5692f42a7d9845bdb7c0bffd4e97541b65321de83e4083c1c8cc93eec59933f42655d7c0ad170ed9a3ea418b582e09a2692fc1965d8372cac678f0dabe1b0cbda93ac9b484feb9d2e96f3ab7e2fc6430da1931281c1870c637866be7fcd69c1b067e001887bb17a57ccd77532ea9dfaa0be1390db5511771dc9e03593e344bf0647ddac395b1fe80a86ad4ea4606fdb8a82fdcf9c846114c

cf2 = 0x356f7e82071f321361075ee85f9b42922662559ed64b253c64ff37b52fe8dcf3ab3163079bc9a12e951f84d2f7a911cbf1b1e8d7cd759a128f21a89b625b07ded33443a2888ca9a455198fd5b4a3fb307f34c704b7dcad88685263f4c3f4cf37f1099f2bd188de72533308c25fc18948dda220e3693b7f3edb689ee489c14e7624932ee8928370c9c1d59b06d1071a259d64c38735b1b586082099919713b669a79e43329f0c20508620982d95b774a57d009540c2ef2835887d229273223272f86fb0b1740937d3fc83d7556ffe634a16fb1faf6125878b06f5d537c21260014e2e67ae47636cbce899c463a3669954253aac3aa89a1c800d3251cf6a36badf

#print m1**3
#print m2**3

mx1 = 4466358777971691457435885518769784951642173703284002637501046323030520761692351076298571683882562300131268099052302453420556654751513061682406342980798761018213065393407180599734627592208954624630601909380133809438402370438158087170470479759708188002992966096777634132039969731463007312107142748077952767844885647922250520292551873873541332142731281807870591794621598337632918413454348075494678583005298988146075395614342419016668960623232079068306310786149159812195951484600752305211813095177634612335937404141788254989361459376021030206938670541110050217311224366933595374092242875342160289488733247033187146247907206606673932245429197593191030429
mx2 = 313342686223120302355355680117685237618611945191328776919477706177912909002878199013594941795266031655741408378430352260892105853121682700772718919626402904754819694539954799583619885263922690286343463820855063906986136024288675324919579285275284896099650393980522869717889542905641317207611154121936947627988579704294950583904311614226565076893326457029754762731053369735317838287590437787656564937918345033464084762001126878461307112301001012449292471380213390919441002217360669077807525353188203713450680697431779080215094403782773154941602578385818923217803913335569218112568153615085786411486877538122037019465339880118779242591970808569391695017477450719913190503293661375

#m1**3-c1=k1*n
#m2**3-c2=k2*n
#gcd(m1**3-c1,m2**3-c2) == n

n = gmpy2.gcd(mx1-c1, mx2-c2)
#print n
#n = 17239653555729308464049438184920371089879081148402291800380594759517665804698359052648921465219887554469533537465122062104900480567488997794605293481770139146098702102563250193298500864238250949982552595159802814788612573898410252974926866757617491510437384709301937357695288829868010397984533999482461397333141208905813094732501385628605554793978927603376904138986551086256407424185029648833489655496424708493511895902919181646372064531235987733921846952446773365611469842532440322381367711369625814351911101284458643213930109512205598526068165522864217435748337932540742524768583448250580752519750464577065964352977

#sage dec.sage
mf1 = 1505593557727010439856493253617408408322219047417432959660927950769815422797332664593900879902814640113045181948866056513007012448124150324196697143608771007103039023721887292773312804100778891797446818305707659559949781639673722680326598022638747769030731354619188906671854084331682719742367556873618944378003562473398500503515145590286691928792499619807412698058088029026120295331417806

print hex(mf1)[2:-1].decode('hex')
#HTB{Fr4nk1ln_r3t1t3r_sh0rt_p4d_4tt4ck!4nyw4ys_n3v3r_us3_sm0l_3xp_f0r_rs4!1s_th1s_Msg_g01ng_l4rg3r?_0h_y3s_cuz_1_h4v3_t0_Pr3v3nt_Cub3_r00t_4tt4ck}
