

# This file was *autogenerated* from the file dec.sage
from sage.all_cmdline import *   # import sage library

_sage_const_26189572440233739420990528170531051459310363621928135990243626537967 = Integer(26189572440233739420990528170531051459310363621928135990243626537967); _sage_const_100 = Integer(100); _sage_const_2 = Integer(2); _sage_const_1 = Integer(1); _sage_const_256 = Integer(256); _sage_const_80 = Integer(80); _sage_const_0 = Integer(0)
from Crypto.Util.number import *
import json

q = _sage_const_26189572440233739420990528170531051459310363621928135990243626537967 

# b'{"admin": True, "user": "xxxxxxx"}'

for k in range(_sage_const_100 ):
	
	c = bytes_to_long(b'{"admin": true, "user": "' + b"\x00" * k + b'"}')
	M = Matrix(ZZ, k+_sage_const_2 , k+_sage_const_2 )
	M[:k+_sage_const_1 , :k+_sage_const_1 ] = Matrix.identity(k+_sage_const_1 )
	for i in range(k):
		M[i, -_sage_const_1 ] = _sage_const_256  ** (k+_sage_const_1  - i)
		M[-_sage_const_2 , i] = -_sage_const_80 
	M[-_sage_const_2 , -_sage_const_2 ] = _sage_const_1 
	M[-_sage_const_2 , -_sage_const_1 ] = c
	M[-_sage_const_1 , -_sage_const_1 ] = -q
	M = M.LLL()

	for r in M:
		if r[-_sage_const_1 ] == _sage_const_0  and r[-_sage_const_2 ] == _sage_const_1 :
			try:
				print("Found")
				print(k)
				user = "".join([chr(r[i] + _sage_const_80 ) for i in range(k)])
				# check
				message = b'{"admin": true, "user": "' + user.encode() + b'"}'
				print(bytes_to_long(message) % q)
				print(message.decode())
			except:
				pass

