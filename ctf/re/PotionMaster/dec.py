
'''
checkFlag :: String -> Bool
checkFlag flag =
  length content == 76 &&
  all (==True) (map (\ (l,r) -> l == r) (zip one a)) &&
  all (==True) (map (\ (l,r) -> l == r) (zip two b)) &&
  all (==True) (map (\ (l,r) -> l == r) (zip three c)) &&
  all (==True) (map (\ (l,r) -> l == r) (zip four d))
  where content = map ord (extractFlag flag)
        one     = map (\ [l, r] -> (l - r)) (chunks 2 content)
        two     = map (foldr xor 0) (chunks 3 content)
        three     = map (foldr (+) 0) (chunks 4 content)
        four     = map head (chunks 5 content)

'''
from z3 import *

a = [-43, 61, 58, 5, -4, -11, 64, -40, -43, 61, 62, -51, 46, 15, -49, -44, 47, 4, 6, -7, 47, 7, -59, 52, 17, 11, -56, 61, -74, 52, 63, -21, 53, -17, 66, -10, -58, 0]
b = [6, 106, 10, 0, 119, 52, 51, 101, 0, 0, 15, 48, 116, 22, 10, 58, 93, 59, 106, 43, 30, 47, 93, 62, 97, 63]
c = [304, 357, 303, 320, 304, 307, 349, 305, 257, 337, 340, 309, 396, 333, 320, 380, 362, 368, 286]
d = [52, 52, 95, 95, 110, 49, 51, 51, 95, 110, 110, 53, 116, 51, 98, 63]

f = [ BitVec('f_%s' % i, 8) for i in range(76) ]

s = Solver()

for i in range(76):
        s.add(f[i] >= 0x20)
        s.add(f[i] < 0x7f)

j = 0
for i in range(0,76,5):
	s.add(f[i] == d[j])
	j += 1

j = 0
for i in range(0,76,2):
	s.add(f[i] - f[i+1] == a[j])
	j += 1

j = 0
for i in range(0,76-3,3):
	s.add(f[i]^f[i+1]^f[i+2] == b[j])
	j += 1
s.add(f[75] == b[-1])

j = 0
for i in range(0,76,4):
	s.add(f[i]+f[i+1]+f[i+2]+f[i+3] == c[j])
	j += 1

print s.check()
print s.model()

r = [ (23 , 100), (33 , 52), (32 , 99), (7 , 95), (18 , 109), (27 , 95), (49 , 85), (53 , 111), (8 , 49), (68 , 114), (42 , 102), (56 , 45), (69 , 48), (19 , 48), (12 , 117), (13 , 53), (6 , 100), (26 , 110), (29 , 104), (57 , 119), (73 , 109), (48 , 102), (38 , 114), (62 , 95), (28 , 55), (72 , 51), (67 , 112), (3 , 48), (39 , 121), (9 , 53), (37 , 48), (66 , 95), (22 , 49), (16 , 52), (47 , 48), (52 , 55), (58 , 104), (63 , 116), (17 , 95), (2 , 109), (43 , 95), (46 , 100), (59 , 52), (36 , 54), (74 , 63), (71 , 108), (64 , 104), (61 , 53), (54 , 114), (51 , 99), (44 , 51), (41 , 48), (34 , 55), (31 , 95), (24 , 95), (21 , 48), (14 , 55), (11 , 106), (4 , 110), (1 , 95), (75 , 63), (70 , 98), (65 , 51), (60 , 116), (55 , 53), (50 , 110), (45 , 110), (40 , 95), (35 , 51), (30 , 51), (25 , 49), (20 , 110), (15 , 95), (10 , 95), (5 , 52), (0 , 52) ] 

r = sorted(r)
#print r
print 'HTB{'+''.join([chr(i[1]) for i in r])+'}'
