#!/usr/bin/python3
from pwn import *
from Crypto.Cipher import AES
from Crypto.Util.Padding import unpad

ch = ''

'''
  if ((((((((DAT_0010515b & 0xf0) == 0x10) && ((DAT_0010515b & 0xf) == 0xe)) &&
         (DAT_00105150 == -0x19)) && ((DAT_0010515f == -0x3c && (DAT_0010515e == ';')))) &&
       ((DAT_0010515c == '\x01' && ((DAT_00105153 == 'B' && (DAT_00105154 == -0x35)))))) &&
      (DAT_00105151 == -0x2b)) &&
     ((((DAT_00105152 == '(' && (DAT_0010515d == '\t')) && (DAT_00105155 == -0x1c)) &&
      (((DAT_00105156 == '0' && (DAT_00105157 == '@')) &&
       ((DAT_00105158 == 'c' && ((DAT_00105159 == '\v' && (DAT_0010515a == 'k'))))))))))
'''

md5 = [0]*16

md5[0xb] = 0x1e
md5[0] = 256-0x19
md5[0xf] = 256-0x3c
md5[0xe] = ord(';')
md5[0xc] = 1
md5[3] = ord('B')
md5[4] = 256-0x35
md5[1] = 256-0x2b
md5[2] = ord('(')
md5[0xd] = ord('\t')
md5[5] = 256-0x1c
md5[6] = ord('0')
md5[7] = ord('@')
md5[8] = ord('c')
md5[9] = ord('\v')
md5[0xa] = ord('k')

for i in md5:
	print(hex(i)[2:].zfill(2),end='')
print('')

key=bytes.fromhex('e7d52842cbe43040630b6b1e01093bc4')
#key=bytes.fromhex('8d93d9819942f8e443fdde4fc2d67bc2') #test NES and compare the result to make sure our solution is correct

c=bytes.fromhex(ch)

def aes_ecb_decrypt(key, ciphertext):
	cipher = AES.new(key, AES.MODE_ECB)
	plaintext = cipher.decrypt(ciphertext)
	return unpad(plaintext, 16)

decrypted = aes_ecb_decrypt(key, c)

print(decrypted.hex())

patch = bytes.fromhex('34373235343f363548777249487772492c1312253837122b487752657c7372490875b08bf4b7740f0875b08bf4b7740f467d787f467570770a778dd0c9ee4e0b')

p2 = xor(patch, b'6507')
print(p2)

rom = bytearray(decrypted)

rom[0x106] = p2[0]
rom[0x107] = p2[1]
rom[0x108] = p2[2]
rom[0x109] = p2[3]
rom[0x10a] = p2[4]
rom[0x10b] = p2[5]
rom[0x10c] = p2[6]
rom[0x10d] = p2[7]
rom[0x10f] = p2[8]
rom[0x110] = p2[9]
rom[0x111] = p2[10]
rom[0x112] = p2[0xb]
rom[0x113] = p2[0xc]
rom[0x114] = p2[0xd]
rom[0x115] = p2[0xe]
rom[0x116] = p2[0xf]
rom[0x118] = p2[0x10]
rom[0x119] = p2[0x11]
rom[0x11a] = p2[0x12]
rom[0x11b] = p2[0x13]
rom[0x11c] = p2[0x14]
rom[0x11d] = p2[0x15]
rom[0x11e] = p2[0x16]
rom[0x11f] = p2[0x17]
rom[0x121] = p2[0x18]
rom[0x122] = p2[0x19]
rom[0x123] = p2[0x1a]
rom[0x124] = p2[0x1b]
rom[0x125] = p2[0x1c]
rom[0x126] = p2[0x1d]
rom[0x127] = p2[0x1e]
rom[0x128] = p2[0x1f]
rom[0x12a] = p2[0x20]
rom[299] = p2[0x21]
rom[300] = p2[0x22]
rom[0x12d] = p2[0x23]
rom[0x12e] = p2[0x24]
rom[0x12f] = p2[0x25]
rom[0x130] = p2[0x26]
rom[0x131] = p2[0x27]
rom[0x133] = p2[0x28]
rom[0x134] = p2[0x29]
rom[0x135] = p2[0x2a]
rom[0x136] = p2[0x2b]
rom[0x137] = p2[0x2c]
rom[0x138] = p2[0x2d]
rom[0x139] = p2[0x2e]
rom[0x13a] = p2[0x2f]
rom[0x13c] = p2[0x30]
rom[0x13d] = p2[0x31]
rom[0x13e] = p2[0x32]
rom[0x13f] = p2[0x33]
rom[0x140] = p2[0x34]
rom[0x141] = p2[0x35]
rom[0x142] = p2[0x36]
rom[0x143] = p2[0x37]
rom[0x14e] = p2[0x38]
rom[0x14f] = p2[0x39]
rom[0x150] = p2[0x3a]
rom[0x151] = p2[0x3b]
rom[0x152] = p2[0x3c]
rom[0x153] = p2[0x3d]
rom[0x154] = p2[0x3e]
rom[0x155] = p2[0x3f]

rom = bytes(rom)
print(rom)
